{% extends 'base.html.twig' %}

{% block title %}Le Blog de FIRSTCOM
{% endblock %}

{% block body %}

	<section class="blog-container">
		{# Dernier article en vedette #}
		{% if dernierArticle %}
		
			<div class="vedette-article" style="background-image: url('{{ asset('uploads/images/' ~ dernierArticle.imgXL) }}');">
				<div class="container-medium-blog">
					<div class="row">
						<div class="col-sm-12 col-md-12 p-4 p-sm-5 vedette-article-lancement">
							<div class="infos mb-3">
								<span class="date">{{ dernierArticle.dateCreation | date('d m Y') }}</span>
								{% for categorie in dernierArticle.categorie %}
									<span class="categories">{{ categorie.nom }}</span>
								{% endfor %}
							</div>
							<h1 class="writeWhite mb-3">{{ dernierArticle.titre | raw}}</h1>
							<div class="writeWhite texte-courant">{{ dernierArticle.descriptionCourte | split(' ') | slice(0, 20) | join(' ') | raw }} ...</div>

							<div class="row">
								<div class="col-6 col-md-2 col-xl-2 col-xxl-1">
									<a href="{{ path('app_article_show', {
										'id': dernierArticle.id,
										'slug': dernierArticle.titre | striptags | slug | lower
									}) }}" class="d-block mt-4">LIRE</a>
								</div>
							</div>
						</div>
						<div class="col-12 vedette-article-fleche-suite">
							<img src="{{ asset('uploads/images/fleche-up-white.webp') }}" alt="fleche-bas">
						</div>
					</div>

					
				</div>

			</div>

		{% endif %}

		<style>
			.vedette-article-lancement {
				position: relative;
				top: 35px;

			}

			.vedette-article-fleche-suite {
				display: none;
			}

			.vedette-article-fleche-suite img {
				display: block;
				margin: 50px auto 0 auto;
				transform: rotate(180deg);
			}

			@media screen and (max-width: 991px) {
				.vedette-article-fleche-suite {
					display: block;
				}
			}

			.blog-categories {
				background-color: #3C4141;
				text-align: center;
				padding: 6px;
			}

			@media screen and (max-width: 991px) {
				.blog-categories {
					display: none;
				}
				.blog-categories-mobile {
					display: block;
				}
			}

			.blog-categories span {
				font-size: 12px;
				color: #FFFFFF;
				font-weight: 500;
			}

			.blog-categories a {
				text-decoration: none;
				font-size: 12px;
				color: #FFFFFF;
				font-weight: 500;
			}

			.blog-categories a:hover {
				color: #96A596;
			}

			.blog-categories-mobile {
				background-color: #3C4141;
				text-align: center;
				padding: 6px;
			}

			@media screen and (min-width: 991px) {
				.blog-categories {
					display: block;
				}
				.blog-categories-mobile {
					display: none;
				}
			}

			.blog-categories-mobile span {
				font-size: 16px;
				color: #FFFFFF;
				font-weight: 700;
			}

			.blog-categories-mobile a:first-child {
				margin-top: 20px;
			}

			.blog-categories-mobile a {
				display: block;
				font-size: 12px;
				color: #FFFFFF;
				font-weight: 500;
				text-decoration: none;
				margin: 15px auto;
			}

			.blog-categories-mobile img {
				width: 20px;
				position: relative;
    			bottom: 2px;
			}

			.target-cat-mobile {
				cursor: pointer;
			}

			/* Style de base pour le menu déroulant */
			.categories-mobile {
				overflow: hidden;
				transition: max-height 0.3s ease;
				max-height: 0; /* Commence avec max-height à 0 */
			}

			/* Quand le menu est ouvert, max-height est augmenté pour permettre l'affichage du contenu */
			.cat-mobile-ouvert {
				max-height: 20em; /* Vous devrez ajuster cette valeur en fonction de votre contenu */
			}

			/* Quand le menu est fermé, max-height est réduit pour masquer le contenu */
			.cat-mobile-ferme {
				max-height: 0;
			}


			.fleche-categories {
				width: 20px;
				margin: 0 10px;
				position: relative;
				bottom: 1px;
			}

			.chevron-categories {
			transition: transform 0.3s ease;
			}

			/* Quand la classe .chevron-up est présente, l'icône pivote */
			.chevron-categories.chevron-up {
				transform: rotate(180deg);
			}

			.active-category {
				color: #96A596 !important;
				font-weight: 500 !important;
			}

			
		</style>
		<script>
			document.addEventListener("DOMContentLoaded", (event) => {
			
				let target = document.querySelector('.target-cat-mobile');
				let categories_mobile = document.querySelector('.categories-mobile');

				target.addEventListener('click', () => {
					// Basculer entre les classes pour ouvrir/fermer le menu
					categories_mobile.classList.toggle('cat-mobile-ferme');
					categories_mobile.classList.toggle('cat-mobile-ouvert');

					let chevron = target.querySelector('.chevron-categories');
					if (chevron) {
						chevron.classList.toggle('chevron-up');
					
					}
				});
			});
		</script>
		<div class="container-meduim">
			<div class="blog-categories">
				<span>CATÉGORIES</span>
				<span><img class="fleche-categories" src="{{ asset('uploads/images/fleche-right-white.webp') }}"></span>
				<a href="" class="active-category filter" id="allCategories">TOUT</a>
				{% for categorie in categories %}
					<span> | </span>
					<a href="" id="{{ categorie.nom }}" class="filter">
						{{ categorie.nom | upper }}
					</a>
				{% endfor %}
			</div>
		</div>

		<div class="container-meduim">
			<div class="blog-categories-mobile align-items-center justify-content-center">
				<div class="target-cat-mobile">
					<span>CATÉGORIES</span>
					<span><img class="chevron-categories" src="{{ asset('uploads/images/chevron-down-white.svg') }}"></span>
				</div>

				<div class="categories-mobile cat-mobile-ferme">
					<a href="{{ path('app_blog') }}" class="active-category filter">TOUT</a>
					{% for categorie in categories %}
						<a href="" class="filter">
							{{ categorie.nom | upper }}
						</a>
					{% endfor %}
				</div>
			</div>
		</div>

		<div class="autres-articles">
			<div class="container-fluid">
				<div class="row">
					{% for article in articles %}
						<div class="col-sm-12 col-md-6 p-4 p-sm-5 autres-articles-lancement" style="background-image: url('{{ asset('uploads/images/' ~ article.imgS) }}'); background-repeat: no-repeat; background-size: cover; background-position: center; display: flex; justify-content: center; align-items: center;" id="article-{{ article.id }}">

							<div class="container-fluid">
								<div class="inside-autres-articles row p-3 p-sm-4">
									<div class="col-12">
										<div class="infos mb-3">
											<span class="date">{{ article.dateCreation | date('d m Y') }}</span>
											{% for categorie in article.categorie %}
												<span class="categories">{{ categorie.nom }}</span>
											{% endfor %}
										</div>
									</div>
									<div class="col-12">
										<h2 class="writeWhite mb-3">{{ article.titre | raw }}</h2>
									</div>
									<div class="col-12">
										<div class="writeWhite texte-courant-mini">{{ article.descriptionCourte | split(' ') | slice(0, 20) | join(' ') | raw }} ...</div>
									</div>
									<div class="col-4 col-md-4 col-xl-3 col-xxl-2">
										<a href="{{ path('app_article_show', {
											'id': article.id,
											'slug': article.titre | striptags | slug | lower
										}) }}" class="d-block mt-4">LIRE</a>
									</div>
								</div>
							</div>
						</div>
					{% endfor %}
				</div>
			</div>
		
		<div class="load-article-btn">
			<button class="load-article">
				Afficher plus d'articles
			</button>
			<div class="loader">
				<span>Chargement</span>
			</div>
		</div>
	</section>
	<script>

		// Récupérer l'URL actuelle
		const url = window.location.href;
		const urlObj = new URL(url);
		const path = urlObj.pathname; // Exemple : "/blog/categorie/corporate" ou "/blog"

		
		// Script pour le filtre de catégorie
		function filterCateg(e){
			//empêcher le rafraichissement
			e.preventDefault()

			const clickedCategory = e.target.id; 
			const currentCategory = document.querySelector(".blog-categories .active-category")
			
			e.target.classList.toggle("active-category")
			currentCategory.classList.toggle("active-category")
			

			const allArticle = [...document.querySelectorAll(".autres-articles-lancement")]
			allArticle.map((article) => {
				const articleId = article.id;
				const articleCategorieSpan = [...document.querySelectorAll(`#${articleId} .categories`)]

				if(clickedCategory === "allCategories"){
					article.style["display"] = "block"
				}
				else {
					const checkCategoriesFilter = articleCategorieSpan.filter((category) => category.textContent === clickedCategory)

					if(checkCategoriesFilter.length === 0){
						article.style["display"] = "none"
					}
					else{
						article.style["display"] = "block"
					}
				}
			}) 

			// Vérifier si il n'y a plus d'article après le filtre pour afficher un message 
			const checkAllArticle = [...document.querySelectorAll(".autres-articles-lancement")].filter((article) => article.style["display"] !== "none");

			if(checkAllArticle.length === 0){
				const textContainer = document.createElement("p") 
				textContainer.setAttribute("id", "empty_article")
				//textContainer.appendChild(document.createTextNode("Aucun article pour ce filtre."))
				document.querySelector(".container-fluid > .row").appendChild(textContainer);
			}
			else {
				if(document.querySelector("#empty_article")){
					document.querySelector(".container-fluid > .row").removeChild(document.querySelector("#empty_article"))
				}					
			}

		}

		// Définition de l'événement click pour chacun des boutons de filtre
		const filterInput = [...document.querySelectorAll(".filter")];
		filterInput.map((filter) => {
			filter.addEventListener("click", filterCateg )
		})

		if (path !== "/blog") {
			document.addEventListener('DOMContentLoaded', () => {
				// Diviser le chemin en segments
				const segments = path.split('/'); 
				
				// Récupérer le dernier segment
				const lastSegment = segments.pop(); 


				switch (lastSegment) {
					case "conseil-strategie":
						document.getElementById('Conseil & stratégie').click()
						break
					case "corporate":
						document.getElementById('Corporate').click()
						break
					case "creation-de-contenu":
						document.getElementById('Création de contenu').click()
						break
					case "croissance-performance":
						document.getElementById('Croissance & performance').click()
						break
					case "tech-digital":
						document.getElementById('Tech & Digital').click()
						break
					default:
						document.getElementById('allCategories').click()
	
				}


				document.querySelector('.blog-categories').scrollIntoView({ behavior: 'smooth' });

			});
		}
		

		function formatDate(date) {
			const day = String(date.getDate()).padStart(2, '0'); // Jour sur 2 chiffres
			const month = String(date.getMonth() + 1).padStart(2, '0'); // Mois sur 2 chiffres (0-11)
			const year = date.getFullYear(); // Année

			return `${day} ${month} ${year}`; // Retourne la date au format 'd m Y'
		}

		function slugify(text) {
			return text
				.toString()
				.toLowerCase()
				.replace(/\s+/g, '-')         // Remplace les espaces par des tirets
				.replace(/[^\w\-]+/g, '')     // Supprime les caractères non-alphanumériques
				.replace(/\-\-+/g, '-')       // Remplace plusieurs tirets par un seul
				.replace(/^-+/, '')           // Supprime les tirets en début de chaîne
				.replace(/-+$/, '');          // Supprime les tirets en fin de chaîne
		}

		// Script pour le chargement des articles
		document.querySelector('.load-article-btn button').addEventListener("click", (e) => {
			const articleNbrs = [...document.querySelectorAll("div.autres-articles-lancement")].length;
			const articleRow = document.querySelector(".autres-articles .row");

			const loadBtn = e.target;
			const loader = document.querySelector(".loader");

			let moreArticle = false;

			// Affichage de l'animation loader et camouflage du bouton
			loadBtn.style["display"] = "none"
			loader.style["display"] = "flex"

			// Récupération de l'url avec le nom de la route
			const baseUrlToAPI = "{{ path('get-article', { 'index': '__index__'}) }}"
			const urlToAPI = baseUrlToAPI.replace("__index__", articleNbrs + 1)

			fetch(urlToAPI, {method:"GET"})			
			.then(response => {
				// Vérifie si la réponse est correcte (code 200-299)
				if (!response.ok) {
					throw new Error('Erreur réseau : ' + response.status);
				}
				// Retourne la réponse au format JSON
				return response.json();
			})
			.then(data => {
				// proprité message ['message' => 'Il n\'y a plus d\'autres articles à générer.']
				if(!data.hasOwnProperty("message")){
					// Création et affichage de chacun des articles récupérés dans data vers le DOM
					data.map((article) => {
						// Définition de l'url de article
						const baseUrl = "{{ path('app_article_show', { 'id': '__id__', 'slug': '__slug__' }) }}"
						let slugUrl = slugify(article.titre.replace(/<\/?[^>]+(>|$)/g, "")) 			
						const url = baseUrl.replace('__id__', article.id).replace('__slug__', slugUrl)

						const articleNode = document.createElement("div");

						// Définition des catégories de article
						let categorieList = ''
						article.categorie.forEach((categ) => {
							categorieList += `<span class="categories">${categ}</span>`
						})

						articleNode.style["background-image"] = `url(/uploads/images/${article.imgS})`;
						articleNode.style["background-repeat"] = "no-repeat";
						articleNode.style["background-size"] = "cover";
						articleNode.style["background-position"] = "center" ;
						articleNode.style["justify-content"] = "center" ;
						articleNode.style["align-items"] = "center";
						articleNode.classList.add(...["col-sm-12","col-md-6","p-4","p-sm-5","autres-articles-lancement"]);

						articleNode.setAttribute("id", `article-${article.id}`)
						articleNode.innerHTML = `
							<div class="container-fluid">
								<div class="inside-autres-articles row p-3 p-sm-4">
									<div class="col-12">
										<div class="infos mb-3">
											<span class="date"> ${ formatDate(new Date(article.date_creation.date)) }</span>
											${
												categorieList
											}	
										</div>
									</div>
									<div class="col-12">
										<h2 class="writeWhite mb-3">${ article.titre }</h2>
									</div>
									<div class="col-12">
										<div class="writeWhite texte-courant-mini">
											${ article.description_courte.slice(0,150) }...
										</div>
									</div>
									<div class="col-4 col-md-4 col-xl-3 col-xxl-2">
										<a href="
										${ 
											url
										}
										" class="d-block mt-4">LIRE</a>
									</div>
								</div>
							</div>
						`
						articleRow.appendChild(articleNode);	
					})
					moreArticle = true;
					// si on obtient moins que 4 articles (limite d'article par requête)
					if (data.length < 4) {
						moreArticle = false
					}	
				}
				else {
					moreArticle = false;
				}
			})
			.catch(error => {
				// Gère les erreurs
				console.error('Erreur:', error);
				loader.style["display"] = "none";
				loadBtn.style["display"] = "none";
				document.querySelector(".load-article-btn").appendChild(document.createTextNode("Une erreur est survenue lors de la génération des articles. Veuillez réessayez ultérieurement."))
   			 })
			 .finally(() => {
				if(moreArticle){
					// Afficher encore le bouton
					loader.style["display"] = "none";
					loadBtn.style["display"] = "inline"
				}
				else{
					// Cacher le bouton
					loader.style["display"] = "none";
					loadBtn.style["display"] = "none";
					// document.querySelector(".load-article-btn").appendChild(document.createTextNode("Vous êtes arrivé à la fin des articles."));
				}

				//Refiltrage
				document.querySelector(".filter.active-category").click()
				
			 })

			

		})
	</script>
{% endblock %}
